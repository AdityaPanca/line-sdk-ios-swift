default_platform(:ios)

platform :ios do

  before_all do
    xcversion(version: "10.0")
  end

  desc "Switch to Beta environment"
  lane :to_beta do
    Dir.chdir("../") do
      `git clone https://git.linecorp.com/wei-wang/linesdk-ios-swift-beta-config.git 2> /dev/null || (cd linesdk-ios-swift-beta-config ; git pull)`
    end

    env_paths = [
        Pathname.new("../LineSDK/LineSDK/Utils/URLs.swift"),
        Pathname.new("../LineSDK/LineSDKObjC/Utils/LineSDKConstant.swift"),
        Pathname.new("../LineSDKSample/LineSDKSample/Config.xcconfig"),
    ]

    clone_paths = [
        Pathname.new("../linesdk-ios-swift-beta-config/URLs.swift"),
        Pathname.new("../linesdk-ios-swift-beta-config/LineSDKConstant.swift"),
        Pathname.new("../linesdk-ios-swift-beta-config/Config.xcconfig")
    ]
    clone_paths.zip(env_paths).each do |clone, env|
        FileUtils.cp(clone, env)
    end
  end

  desc "Run tests."
  lane :tests do
    run_tests(
        workspace: "LineSDK.xcworkspace",
        devices: ["iPhone 6s"],
        scheme: "LineSDK"
    )
    run_tests(
        workspace: "LineSDK.xcworkspace",
        devices: ["iPhone 6s"],
        scheme: "LineSDKObjC"
    )
    run_tests(
        workspace: "LineSDK.xcworkspace",
        devices: ["iPhone 6s"],
        scheme: "LineSDKSample"
    )
  end

  desc "Lint to check Carthage and CocoaPods compatibility."
  lane :lint do
    ensure_latest_carthage
    carthage(command: "build", no_skip_current: true)
    Action.sh("bundle exec pod lib lint ../LineSDKSwift.podspec")
  end

  desc "Release a new version."
  lane :release do |options|
    target_version = options[:version]
    raise "The version is missed. Use `fastlane release version:{version_number}`.`" if target_version.nil?

    ensure_git_branch
    ensure_git_status_clean

    tests
    lint

    increment_build_number(
        build_number: number_of_commits,
        xcodeproj: "LineSDK/LineSDK.xcodeproj"
    )
    increment_version_number(
        version_number: target_version,
        xcodeproj: "LineSDK/LineSDK.xcodeproj"
    )
  
    version_bump_podspec(path: "LineSDKSwift.podspec", version_number: target_version)
    
    release_content = read_changelog(excluded_markdown_elements: [])

    # change_log(version: target_version)
    git_commit_all(message: "Bump version to #{target_version}") 
    add_git_tag(tag: target_version, sign: true)
    push_to_git_remote

    set_github_release(
      repository_name: "line/line-sdk-ios-swift",
      api_token: ENV['GITHUB_TOKEN'],
      name: target_version,
      tag_name: target_version,
      description: release_content
    )

    pod_push
  end

  desc "Generate documentation"
  lane :doc do
    jazzy
  end

  desc "Generate documentation for internal usage"
  lane :doc_internal do
    jazzy(config: ".jazzy-internal.yaml")
  end

  lane :change_log do |options|
    target_version = options[:version]
    raise "The version is missed. You need to specify a version parameter." if target_version.nil?
    stamp_changelog(section_identifier: target_version)
  end

  lane :ensure_latest_carthage do
    Actions.sh("brew update || brew update")
    Actions.sh("brew outdated carthage || brew upgrade carthage")
  end
end
